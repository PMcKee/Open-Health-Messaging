//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OpenHealthMessaging.Els.Service
{
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ns.electronichealth.net.au/wsp/xsd/StandardError/2010")]
    public partial class StandardErrorType
    {
        
        private StandardErrorCodeType errorCodeField;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public StandardErrorCodeType errorCode
        {
            get
            {
                return this.errorCodeField;
            }
            set
            {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ns.electronichealth.net.au/wsp/xsd/StandardError/2010")]
    public enum StandardErrorCodeType
    {
        
        /// <remarks/>
        servicePermanentUnavailable,
        
        /// <remarks/>
        serviceTemporaryUnavailable,
        
        /// <remarks/>
        certificateSkiMissing,
        
        /// <remarks/>
        certificateKeyUsage,
        
        /// <remarks/>
        invalidCredentials,
        
        /// <remarks/>
        notAuthenticated,
        
        /// <remarks/>
        notAuthorised,
        
        /// <remarks/>
        badParam,
        
        /// <remarks/>
        badlyFormedMsg,
        
        /// <remarks/>
        badTimestamp,
        
        /// <remarks/>
        badSignature,
        
        /// <remarks/>
        badEncryption,
        
        /// <remarks/>
        badSigEncOrder,
        
        /// <remarks/>
        badCertificateTransmitted,
        
        /// <remarks/>
        badWsaAction,
        
        /// <remarks/>
        badWsaMessageId,
        
        /// <remarks/>
        badWsaTo,
        
        /// <remarks/>
        badAlgorithmDataEncryption,
        
        /// <remarks/>
        badAlgorithmKeyEncryption,
        
        /// <remarks/>
        badAlgorithmC14N,
        
        /// <remarks/>
        badAlgorithmDigest,
        
        /// <remarks/>
        badAlgorithmSignature,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ns.electronichealth.net.au/qcr/xsd/QualifiedCertRef/2010")]
    public partial class QualifiedCertRefType
    {
        
        private string typeField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ns.electronichealth.net.au/els/xsd/DataTypes/2010")]
    public partial class ElsCertRefType
    {
        
        private string useQualifierField;
        
        private QualifiedCertRefType qualifiedCertRefField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string useQualifier
        {
            get
            {
                return this.useQualifierField;
            }
            set
            {
                this.useQualifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ns.electronichealth.net.au/qcr/xsd/QualifiedCertRef/2010", Order=1)]
        public QualifiedCertRefType qualifiedCertRef
        {
            get
            {
                return this.qualifiedCertRefField;
            }
            set
            {
                this.qualifiedCertRefField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ns.electronichealth.net.au/els/xsd/DataTypes/2010")]
    public partial class InteractionType
    {
        
        private string targetField;
        
        private string serviceCategoryField;
        
        private string serviceInterfaceField;
        
        private string serviceEndpointField;
        
        private string serviceProviderField;
        
        private ElsCertRefType[] certRefField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string target
        {
            get
            {
                return this.targetField;
            }
            set
            {
                this.targetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=1)]
        public string serviceCategory
        {
            get
            {
                return this.serviceCategoryField;
            }
            set
            {
                this.serviceCategoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=2)]
        public string serviceInterface
        {
            get
            {
                return this.serviceInterfaceField;
            }
            set
            {
                this.serviceInterfaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=3)]
        public string serviceEndpoint
        {
            get
            {
                return this.serviceEndpointField;
            }
            set
            {
                this.serviceEndpointField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=4)]
        public string serviceProvider
        {
            get
            {
                return this.serviceProviderField;
            }
            set
            {
                this.serviceProviderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("certRef", Order=5)]
        public ElsCertRefType[] certRef
        {
            get
            {
                return this.certRefField;
            }
            set
            {
                this.certRefField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ns.electronichealth.net.au/els/xsd/DataTypes/2010")]
    public partial class InteractionRequestType
    {
        
        private string targetField;
        
        private string[] serviceCategoryField;
        
        private string[] serviceInterfaceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string target
        {
            get
            {
                return this.targetField;
            }
            set
            {
                this.targetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("serviceCategory", DataType="anyURI", Order=1)]
        public string[] serviceCategory
        {
            get
            {
                return this.serviceCategoryField;
            }
            set
            {
                this.serviceCategoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("serviceInterface", DataType="anyURI", Order=2)]
        public string[] serviceInterface
        {
            get
            {
                return this.serviceInterfaceField;
            }
            set
            {
                this.serviceInterfaceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ns.electronichealth.net.au/els/svc/Lookup/2010")]
    public partial class LookupErrorType
    {
        
        private LookupErrorCodeType errorCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public LookupErrorCodeType errorCode
        {
            get
            {
                return this.errorCodeField;
            }
            set
            {
                this.errorCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ns.electronichealth.net.au/els/svc/Lookup/2010")]
    public enum LookupErrorCodeType
    {
        
        /// <remarks/>
        unknownTargetId,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ns.electronichealth.net.au/els/svc/Lookup/2010", ConfigurationName="OpenHealthMessaging.EndpointLocationService.Lookup.Lookup")]
    public interface Lookup
    {
        
        // CODEGEN: Generating message contract since the operation listInteractions is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://ns.electronichealth.net.au/els/svc/Lookup/2010/Lookup/listInteractionsRequ" +
            "est", ReplyAction="http://ns.electronichealth.net.au/els/svc/Lookup/2010/Lookup/listInteractionsResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(StandardErrorType), Action="http://ns.electronichealth.net.au/els/svc/Lookup/2010/Lookup/listInteractions/Fau" +
            "lt/standardError", Name="standardError", Namespace="http://ns.electronichealth.net.au/wsp/xsd/StandardError/2010")]
        [System.ServiceModel.FaultContractAttribute(typeof(LookupErrorType), Action="http://ns.electronichealth.net.au/els/svc/Lookup/2010/Lookup/listInteractions/Fau" +
            "lt/lookupError", Name="lookupError")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        listInteractionsResponse listInteractions(listInteractionsRequest request);
        
        // CODEGEN: Generating message contract since the operation validateInteraction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://ns.electronichealth.net.au/els/svc/Lookup/2010/Lookup/validateInteractionR" +
            "equest", ReplyAction="http://ns.electronichealth.net.au/els/svc/Lookup/2010/Lookup/validateInteractionR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(StandardErrorType), Action="http://ns.electronichealth.net.au/els/svc/Lookup/2010/Lookup/validateInteraction/" +
            "Fault/standardError", Name="standardError", Namespace="http://ns.electronichealth.net.au/wsp/xsd/StandardError/2010")]
        [System.ServiceModel.FaultContractAttribute(typeof(LookupErrorType), Action="http://ns.electronichealth.net.au/els/svc/Lookup/2010/Lookup/validateInteraction/" +
            "Fault/lookupError", Name="lookupError")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        validateInteractionResponse1 validateInteraction(validateInteractionRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ns.electronichealth.net.au/els/svc/Lookup/2010")]
    public partial class listInteractions
    {
        
        private InteractionRequestType interactionRequestField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public InteractionRequestType interactionRequest
        {
            get
            {
                return this.interactionRequestField;
            }
            set
            {
                this.interactionRequestField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class listInteractionsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ns.electronichealth.net.au/els/svc/Lookup/2010", Order=0)]
        public listInteractions listInteractions;
        
        public listInteractionsRequest()
        {
        }
        
        public listInteractionsRequest(listInteractions listInteractions)
        {
            this.listInteractions = listInteractions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class listInteractionsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="listInteractionsResponse", Namespace="http://ns.electronichealth.net.au/els/svc/Lookup/2010", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("interaction", IsNullable=false)]
        public InteractionType[] listInteractionsResponse1;
        
        public listInteractionsResponse()
        {
        }
        
        public listInteractionsResponse(InteractionType[] listInteractionsResponse1)
        {
            this.listInteractionsResponse1 = listInteractionsResponse1;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ns.electronichealth.net.au/els/svc/Lookup/2010")]
    public partial class validateInteraction
    {
        
        private InteractionType interactionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public InteractionType interaction
        {
            get
            {
                return this.interactionField;
            }
            set
            {
                this.interactionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ns.electronichealth.net.au/els/svc/Lookup/2010")]
    public partial class validateInteractionResponse
    {
        
        private bool isValidField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool isValid
        {
            get
            {
                return this.isValidField;
            }
            set
            {
                this.isValidField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class validateInteractionRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ns.electronichealth.net.au/els/svc/Lookup/2010", Order=0)]
        public validateInteraction validateInteraction;
        
        public validateInteractionRequest()
        {
        }
        
        public validateInteractionRequest(validateInteraction validateInteraction)
        {
            this.validateInteraction = validateInteraction;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class validateInteractionResponse1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ns.electronichealth.net.au/els/svc/Lookup/2010", Order=0)]
        public validateInteractionResponse validateInteractionResponse;
        
        public validateInteractionResponse1()
        {
        }
        
        public validateInteractionResponse1(validateInteractionResponse validateInteractionResponse)
        {
            this.validateInteractionResponse = validateInteractionResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface LookupChannel : OpenHealthMessaging.EndpointLocationService.Lookup.Lookup, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LookupClient : System.ServiceModel.ClientBase<OpenHealthMessaging.EndpointLocationService.Lookup.Lookup>, OpenHealthMessaging.EndpointLocationService.Lookup.Lookup
    {
        
        public LookupClient()
        {
        }
        
        public LookupClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public LookupClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public LookupClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public LookupClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        listInteractionsResponse OpenHealthMessaging.EndpointLocationService.Lookup.Lookup.listInteractions(listInteractionsRequest request)
        {
            return base.Channel.listInteractions(request);
        }
        
        public InteractionType[] listInteractions(listInteractions listInteractions1)
        {
            listInteractionsRequest inValue = new listInteractionsRequest();
            inValue.listInteractions = listInteractions1;
            listInteractionsResponse retVal = ((OpenHealthMessaging.EndpointLocationService.Lookup.Lookup)(this)).listInteractions(inValue);
            return retVal.listInteractionsResponse1;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        validateInteractionResponse1 OpenHealthMessaging.EndpointLocationService.Lookup.Lookup.validateInteraction(validateInteractionRequest request)
        {
            return base.Channel.validateInteraction(request);
        }
        
        public validateInteractionResponse validateInteraction(validateInteraction validateInteraction1)
        {
            validateInteractionRequest inValue = new validateInteractionRequest();
            inValue.validateInteraction = validateInteraction1;
            validateInteractionResponse1 retVal = ((OpenHealthMessaging.EndpointLocationService.Lookup.Lookup)(this)).validateInteraction(inValue);
            return retVal.validateInteractionResponse;
        }
    }
}
